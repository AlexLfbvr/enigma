security:
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    admin:
                        password: '$2y$13$DOyVlWh2tCoL/2yf02jhyeX9mh4HBwmLy6cfYxDI6bcJjyZLbyuZa'
                        roles: 'ROLE_ADMIN'
                    user:
                        password: '$2y$13$PWJ.4VILldmKIs.FIKyW1.CStQJ4BIXmdt5VGnsPhvEsuVx9CGnX2'
                        roles: 'ROLE_USER'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: /logout
                target: /logout
                csrf_token_generator: security.csrf.token_manager

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ['ROLE_ADMIN', 'ROLE_ALLOWED_TO_SWITCH']

    # Easy way to control access for large sections of your site
    # Note: Only the first access control that matches will be used
    access_control:
        - { path: ^/orders/create, roles: ROLE_ADMIN }
        - { path: ^/orders, roles: ROLE_USER }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }